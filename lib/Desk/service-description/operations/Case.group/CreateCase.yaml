extends: create
summary: Create a new case
uri: cases
responseClass: CaseModel
parameters:
    external_id:   { extends: CaseModel.external_id }
    subject:       { extends: CaseModel.subject }
    priority:      { extends: CaseModel.priority }
    description:   { extends: CaseModel.description }
    status:        { extends: CaseModel.status }
    type:          { extends: CaseModel.type, required: true }
    labels:        { extends: CaseModel.labels }
    custom_fields: { extends: CaseModel.custom_fields }
    created_at:    { extends: CaseModel.created_at.input }
    updated_at:    { extends: CaseModel.updated_at.input }
    active_at:     { extends: CaseModel.active_at.input }
    received_at:   { extends: CaseModel.received_at.input }
    locked_until:  { extends: CaseModel.locked_until.input }
    customer_id:
        description: The customer that submitted this case
        required: false
        type: integer
        location: links
        sentAs: customer
        data:
            class: customer
            href: "/api/v2/customers/{value}"
    assigned_user_id:
        description: The user assigned to this case
        type: integer
        location: links
        sentAs: assigned_user
        data:
            class: user
            href: "/api/v2/users/{value}"
    assigned_group_id:
        description: The group assigned to this case
        type: integer
        location: links
        sentAs: assigned_group
        data:
            class: group
            href: "/api/v2/groups/{value}"
    locked_by_id:
        description: User currently working on this case
        type: integer
        location: links
        sentAs: locked_by
        data:
            class: user
            href: "/api/v2/users/{value}"
    entered_by_id:
        description: The support agent that entered the first phone interaction
        type: integer
        location: links
        sentAs: entered_by
        data:
            class: user
            href: "/api/v2/users/{value}"
    message:
        type: object
        properties:
            direction:  { extends: CaseMessageModel.direction, required: true }
            status:     { extends: CaseMessageModel.status }
            body:       { extends: CaseMessageModel.body }
            subject:    { extends: CaseMessageModel.subject }
            from:       { extends: CaseMessageModel.from }
            to:         { extends: CaseMessageModel.to }
            cc:         { extends: CaseMessageModel.cc }
            bcc:        { extends: CaseMessageModel.bcc }
            created_at: { extends: CaseMessageModel.created_at.input }
            entered_at: { extends: CaseMessageModel.entered_at.input }
        location: json
